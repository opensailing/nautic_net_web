<div id="map" phx-hook="LeafletHook" phx-update="ignore" />

<div class="flex items-center justify-between my-4">
  <div class="flex items-center gap-4">
    <form phx-change="select_date" class="w-36">
      <.input
        type="date"
        id="date"
        name="date"
        value={@local_date.date}
        errors={[]}
        disabled={@live?}
      />
    </form>

    <form phx-change="live_changed">
      <.input type="checkbox" id="live" name="live" checked={@live?} label="Live" />
    </form>
    <form phx-change="water_visible_changed">
      <.input
        type="checkbox"
        id="water_visible"
        name="water_visible"
        checked={@water_visible?}
        label="Water Currents"
      />
    </form>
  </div>

  <div>
    <%= boat_count(@signals) %> <%= if boat_count(@signals) == 1, do: "boat", else: "boats" %>
  </div>
</div>

<div class="my-6 px-4">
  <div
    id="range-slider"
    phx-hook="RangeSliderHook"
    phx-update="ignore"
    data-min={DateTime.to_unix(@first_sample_at)}
    data-from={DateTime.to_unix(@range_start_at)}
    data-max={DateTime.to_unix(@last_sample_at)}
    data-to={DateTime.to_unix(@range_end_at)}
  />
  <div class="flex justify-between mt-2">
    <div>From <%= format_time(@range_start_at) %></div>
    <div>To <%= format_time(@range_end_at) %></div>
  </div>
</div>

<form
  phx-change={Phoenix.LiveView.JS.dispatch("handleSetPosition")}
  phx-click={Phoenix.LiveView.JS.dispatch("handleSetPosition")}
  phx-throttle="500"
  class="mt-4"
>
  <input
    style="width:100%"
    type="range"
    id="position"
    name="position"
    value={DateTime.to_unix(@inspect_at)}
    min={DateTime.to_unix(@range_start_at)}
    max={DateTime.to_unix(@range_end_at)}
    disabled={@live?}
  />
</form>

<div>Inspect <%= format_time(@inspect_at) %></div>

<table>
  <%= for %{channel: %{boat: boat}} = signal <- position_signals(@signals) do %>
    <tr>
      <td>
        <input
          id={"boat-toggle-#{boat.id}"}
          type="checkbox"
          checked={signal.visible?}
          phx-click="set_boat_visible"
          phx-value-boat-id={boat.id}
        />
      </td>
      <td>
        <div class="w-3 h-3" style={"background-color: #{signal.color}"} />
      </td>
      <td>
        <label for={"boat-toggle-#{boat.id}"} class="cursor-pointer">
          <%= boat.name || boat.id %>
        </label>
      </td>
    </tr>
  <% end %>
</table>

<div class="my-4">
  <.button phx-click="toggle_track"><%= if @tracks_visible?, do: "Hide", else: "Show" %></.button>
  <.button :if={@tracks_visible?} phx-click="clear">Clear</.button>
  <.button phx-click="dec_playback_speed">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="currentColor"
      class="w-6 h-6"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M21 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953l7.108-4.062A1.125 1.125 0 0121 8.688v8.123zM11.25 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953L9.567 7.71a1.125 1.125 0 011.683.977v8.123z"
      />
    </svg>
  </.button>
  <%= if @play do %>
    <.button phx-click={
      Phoenix.LiveView.JS.dispatch("animateTime", detail: %{play: false}, to: "#map")
    }>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 5.25v13.5m-7.5-13.5v13.5" />
      </svg>
    </.button>
  <% else %>
    <.button phx-click={
      Phoenix.LiveView.JS.dispatch("animateTime", detail: %{play: true}, to: "#map")
    }>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.348a1.125 1.125 0 010 1.971l-11.54 6.347a1.125 1.125 0 01-1.667-.985V5.653z"
        />
      </svg>
    </.button>
  <% end %>
  <.button phx-click="inc_playback_speed">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="currentColor"
      class="w-6 h-6"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M3 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062A1.125 1.125 0 013 16.81V8.688zM12.75 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062a1.125 1.125 0 01-1.683-.977V8.688z"
      />
    </svg>
  </.button>
</div>

<div class="my-4 border rounded-lg px-4 py-2">
  <div class="flex items-center gap-1 mb-2 pt-1">
    <h3 class="text-sm font-semibold gap-4">Playback Speed</h3>
    <input
      id="playback_speed"
      class="text-center"
      style="width:2rem"
      value={@playback_speed}
      disabled
    />x
  </div>
</div>

<div class="my-4 border rounded-lg px-4 py-2">
  <div class="flex items-center gap-4 mb-2">
    <h2 class="text-xl font-semibold">Inspector</h2>
    <form phx-change="select_boat">
      <.input
        type="select"
        id="boat_id"
        name="boat_id"
        value={@selected_boat && @selected_boat.id}
        options={boat_options(@signals)}
        errors={[]}
      />
    </form>
    <.button phx-click="show_signals_modal">
      <%= if visible_boat_signal_count(@selected_boat, @signals) != boat_signal_count(@selected_boat, @signals) do %>
        <%= visible_boat_signal_count(@selected_boat, @signals) %> of
      <% end %>
      <%= boat_signal_count(
        @selected_boat,
        @signals
      ) %> signals
      <%= if boat_sensor_count(@selected_boat, @signals) > 1 do %>
        from <%= boat_sensor_count(@selected_boat, @signals) %> sensors
      <% end %>
    </.button>
  </div>
  <div class="grid grid-cols-4 gap-4">
    <%= for signal_view <- @signal_views, signal <- visible_boat_signals(@selected_boat, @signals, signal_view.type) do %>
      <.signal_view
        signal={signal}
        show_sensor={boat_sensor_count(@selected_boat, @signals) > 1}
        {signal_view}
      />
    <% end %>
  </div>
</div>

<%= if @signals_modal_visible? do %>
  <.modal id="signals_modal" show={true} on_cancel={JS.push("hide_signals_modal")}>
    <:title>Select Signals for <%= @selected_boat.name %></:title>
    <form phx-change="change_signal_visibility">
      <%= for signal <- boat_signals(@selected_boat, @signals) do %>
        <fieldset class="my-3">
          <.input
            type="checkbox"
            id={"show_signal_" <> signal.channel.id}
            name={signal.channel.id}
            checked={signal.visible?}
            errors={[]}
            label={"#{signal.channel.name} - #{signal.channel.sensor.name}"}
          />
        </fieldset>
      <% end %>
    </form>
  </.modal>
<% end %>
